name: Build distribution

on: [push, pull_request]

jobs:
  test:
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install build dependencies
        run: python -m pip install build wheel

      - name: Build distributions
        shell: bash -l {0}
        run: python -m build

      # Not yet published on PyPI
      # - name: Publish package to PyPI
      #   if: github.repository == 'jacobtomlinson/is-number' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     user: __token__
      #     password: ${{ secrets.pypi_password }}
      - uses: actions/upload-artifact@v2
        with:
          name: python-package
          path: |
            ./dist/*tar.gz
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      # - name: version
      #   id: version
      #   run: |
      #     echo "::set-output name=version::$(echo "${{ github.ref_name }}" | cut -c 2-)"
      - name: upload python artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./rsnapshot-parser_${{ steps.version.outputs.version }}_all.deb
          asset_name: rsnapshot-parser_${{ steps.version.outputs.version }}.deb
          asset_content_type: application/vnd.debian.binary-package